Quote It - Favorite Movie Quotes Blog

- Diagram the resources needed in the database and their relationships (Users has_many Posts)
- List all of the routes needed and their corresponding controller methods
- Start the project in the terminal with 'rails new -d postgresql -T movie_blog'
- cd into project folder and start the database with 'rake db:create'
- Create the two models with 'rails g model users first_name:string last_name:string email:string password_digest:string' and 'rails g model movie:string year:integer quote:text'
- Create one-to-many relationship: 
    1. Open project in sublime and go to Posts migration file: add 't.belongs_to :user'
    2. In post.rb (post model) add 'belongs_to :user' and in user.rb (User model) add 'has_many'

- After double checking relationships, migrate info to db with 'rake db:migrate'
- Enter all of the routes, including vanity routes to the routes.rb file. For resources that  just need standard routes, use rails shortcuts like 'resources :posts, except: [:index]'
- Create controllers for everything you need (here it was Users, Sessions, Posts, Pages) in the terminal with 'rails g controller Post index new create show edit update destroy
'
- Start rails server in the terminal with 'rails s'
- Go to localhost:3000 in the browser and you should see a sample view for the index page.
- In Gemfile, uncomment the line about the bcrypt version and then, in terminal, type 'bundle' to set up bcrypt. Might need to restart rails server. 
- Update user model with 'has_secure_password' and 
